name: Build and upload
on:
    - push
    - pull_request
branches: master
jobs:
    build_linux_macos_wheels:
        needs: testing
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
        steps:
            - name: Checkout Repository And Submodules
              uses: actions/checkout@v2
              with:
                  submodules: recursive
            - name: Set Up Python
              uses: actions/setup-python@v2
            - name: Install Dependencies
              run: python -m pip install build
              shell: bash
            - name: Build Sdist
              run: |
                  if [ "$RUNNER_OS" == "Linux" ]; then
                    python -m build --sdist
                  fi
              shell: bash
            - name: Install Cibuildwheel
              run: python -m pip install cibuildwheel
              shell: bash
            - name: Build Wheels
              env:
                  CIBW_BEFORE_BUILD: bash ./cibw_before_build.sh
                  CIBW_SKIP: pp*
                  CIBW_BUILD_VERBOSITY: 1
                  CIBW_TEST_REQUIRES: pytest
                  CIBW_TEST_COMMAND: "pytest {project}/tests"
              run: |
                  python -m cibuildwheel --output-dir wheelhouse
                  ls wheelhouse/*
              shell: bash
            - name: Upload Builds
              run: |
                  python -m pip install twine
                  if [ "$RUNNER_OS" == "Linux" ]; then
                    # Replace/remove echo
                    python -m twine upload --skip-existing dist/*
                  fi
                  python -m twine upload --skip-existing wheelhouse/*.whl
              shell: bash
    build_win32_wheels:
        needs: testing
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-latest]
        steps:
            - name: Checkout Repository And Submodules
              uses: actions/checkout@v2
              with:
                  submodules: recursive
            - name: Set Up Python
              uses: actions/setup-python@v2
            - name: Install Dependencies
              run: python -m pip install build
              shell: bash
            - name: Install Cibuildwheel
              run: python -m pip install cibuildwheel
              shell: bash
            - name: Build Wheels
              env:
                  CIBW_BEFORE_BUILD: bash ./cibw_before_build.sh
                  CIBW_SKIP: pp* *-win_amd64
                  CIBW_ENVIRONMENT: PLATFORM_OPTION='-A win32'
                  CIBW_BUILD_VERBOSITY: 1
                  CIBW_TEST_REQUIRES: pytest
                  CIBW_TEST_COMMAND: "pytest {project}/tests"
              run: |
                  python -m cibuildwheel --output-dir wheelhouse
                  ls wheelhouse/*
              shell: bash
            - name: Upload Builds
              run: |
                  python -m pip install twine
                  python -m twine upload --skip-existing wheelhouse/*.whl
              shell: bash
    build_amd64_wheels:
        needs: testing
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [windows-latest]
        steps:
            - name: Checkout Repository And Submodules
              uses: actions/checkout@v2
              with:
                  submodules: recursive
            - name: Set Up Python
              uses: actions/setup-python@v2
            - name: Install Dependencies
              run: python -m pip install build
              shell: bash
            - name: Install Cibuildwheel
              run: python -m pip install cibuildwheel
              shell: bash
            - name: Build Wheels
              env:
                  CIBW_BEFORE_BUILD: bash ./cibw_before_build.sh
                  CIBW_SKIP: pp* *-win32
                  CIBW_ENVIRONMENT: PLATFORM_OPTION='-A x64'
                  CIBW_BUILD_VERBOSITY: 1
                  CIBW_TEST_REQUIRES: pytest
                  CIBW_TEST_COMMAND: "pytest {project}/tests"
              run: |
                  python -m cibuildwheel --output-dir wheelhouse
                  ls wheelhouse/*
              shell: bash
            - name: Upload Builds
              run: |
                  python -m pip install twine
                  python -m twine upload --skip-existing wheelhouse/*.whl
              shell: bash
